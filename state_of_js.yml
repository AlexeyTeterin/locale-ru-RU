locale: ru-RU
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.state_of_js.intro
      t: >
          Миру JavaScript не помешало бы немного классификации.


          Начиная с 2016 года, в опросе ежегодно
          участвуют более 20 000 разработчиков для того, чтобы изучить текущие и будущие тенденции.


          Пройдите опрос и помогите нам выяснить, какие библиотеки
          планируют изучить разработчики в будущем, какими из них больше всего довольны уже сейчас, и т.д.

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: Синтаксис
    - key: sections.syntax.description
      t: Грамматика JavaScript.

    - key: sections.language.title
      t: Язык
    - key: sections.language.description
      t: Словарь JavaScript.

    - key: sections.data_structures.title
      t: Структуры данных
    - key: sections.data_structures.description
      t: Как вы храните и управляете данными.

    - key: sections.browser_apis.title
      t: API браузера
    - key: sections.browser_apis.description
      t: Встроенные возможности браузера.

    # - key: sections.other_features.title
    #   t: Другие возможности
    # - key: sections.other_features.description
    #   t: Другие технологии и паттерны.

    - key: sections.patterns.title
      t: Паттерны
    - key: sections.patterns.description
      t: Как вы пишете код.

    - key: sections.javascript_flavors.title
      t: Разновидности JavaScript
    - key: sections.javascript_flavors.description
      t: Языки, компилируемые в JavaScript.

    - key: sections.front_end_frameworks.title
      t: Фронтенд-фреймворки
    - key: sections.front_end_frameworks.description
      t: Фронтенд-фреймворки и библиотеки.

    - key: sections.datalayer.title
      t: Слой доступа к данным
    - key: sections.datalayer.description
      t: Загрузка и управление данными в приложении.

    - key: sections.back_end_frameworks.title
      t: Бэкенд-фреймворки
    - key: sections.back_end_frameworks.description
      t: JavaScript на сервере.

    - key: sections.testing.title
      t: Тестирование
    - key: sections.testing.description
      t: Инструменты для тестирования кода.

    - key: sections.mobile_desktop.title
      t: Мобильные устройства и десктоп
    - key: sections.mobile_desktop.description
      t: JavaScript для мобильных устройств и десктопные приложения.

    - key: sections.build_tools.title
      t: Сборщики
    - key: sections.build_tools.description
      t: Компиляция и сборка кода.

    - key: sections.monorepo_tools.title
      t: Инструменты для монорепозиториев
    - key: sections.monorepo_tools.description
      t: Инструменты, использующиеся для управления монорепозиториями с JavaScript-кодом.

    - key: sections.tools_others.title
      t: Другие инструменты
    - key: sections.tools_others.description
      t: Другие JavaScript-инструменты.

    - key: sections.other_tools.title
      t: Другие инструменты
    - key: sections.other_tools.description
      t: Какими из представленных инструментов и технологий вы регулярно пользуетесь.

    ###########################################################################
    # Options
    ###########################################################################

    # JS pain points
    # - key: options.js_pain_points.browser_interoperability
    #   t: Browser Compatibility
    # - key: options.js_pain_points.browser_interoperability.description
    #   t: Differences between Chrome, Safari, Firefox, etc.
    # - key: options.js_pain_points.animations
    #   t: Animations
    # - key: options.js_pain_points.animations.description
    #   t: Managing animations, transitions, etc. using JavaScript.
    # - key: options.js_pain_points.form_handling
    #   t: Form Handling
    # - key: options.js_pain_points.form_handling.description
    #   t: Creating forms, managing their state and errors, and saving their data.
    - key: options.js_pain_points.state_management
      t: Управление состоянием
    - key: options.js_pain_points.state_management.description
      t: Управление состоянием глобальных данных в сложных приложениях.
    # - key: options.js_pain_points.performance_issues
    #   t: Performance Issues
    # - key: options.js_pain_points.performance_issues.description
    #   t: Bundle sizes, slow loading, and other performance issues.
    - key: options.js_pain_points.managing_dependencies
      t: Управление зависимостями
    - key: options.js_pain_points.managing_dependencies.description
      t: Управление зависимостями, версиями пакетов и размерами бандлов.
    - key: options.js_pain_points.architecture
      t: Архитектура кода
    - key: options.js_pain_points.architecture.description
      t: Организация и поддержка кодовой базы.
    - key: options.js_pain_points.finding_packages
      t: Поиск пакетов
    - key: options.js_pain_points.finding_packages.description
      t: Поиск и оценка пакетов JavaScript.
    - key: options.js_pain_points.writing_modules
      t: Написание модулей
    - key: options.js_pain_points.writing_modules.description
      t: Написание модулей JavaScript и их публикация в виде пакетов.
    - key: options.js_pain_points.debugging
      t: Отладка
    - key: options.js_pain_points.debugging.description
      t: Выявление и решение проблем с кодом.
    - key: options.js_pain_points.async_code
      t: Асинхронный код
    - key: options.js_pain_points.async_code.description
      t: Работа с асинхронными функциями.
    - key: options.js_pain_points.modules_management
      t: Управление модулями
    - key: options.js_pain_points.modules_management.description
      t: Написание и импорт модулей.
    - key: options.js_pain_points.date_management
      t: Управление датами
    - key: options.js_pain_points.date_management.description
      t: Обработка и управление датами и временем.
    # - key: options.js_pain_points.xxx
    #   t:
    # - key: options.js_pain_points.xxx.description
    #   t:


    # JS missing features
    - key: options.currently_missing_from_js.static_typing
      t: Статическая типизация
    - key: options.currently_missing_from_js.static_typing.description
      t: Нативные типы (аналогично тому, что предлагает TypeScript).
    - key: options.currently_missing_from_js.standard_library
      t: Стандартная библиотека
    - key: options.currently_missing_from_js.standard_library.description
      t: Стандартная библиотека общих утилит
    - key: options.currently_missing_from_js.pattern_matching
      t: Сопоставление с образцом
    - key: options.currently_missing_from_js.pattern_matching.description
      t: Новое ключевое слово `match` для объектов, сопоставляющих образцы.
    - key: options.currently_missing_from_js.pipe_operator
      t: Оператор конвейеров
    - key: options.currently_missing_from_js.pipe_operator.description
      t: Новый оператор `|>` для передачи результата одной функции другой.
    - key: options.currently_missing_from_js.decorators
      t: Декораторы
    - key: options.currently_missing_from_js.decorators.description
      t: Декораторы, используемые для метапрограммирования и добавления функциональности к значению.
    - key: options.currently_missing_from_js.immutable_data_structures
      t: Иммутабельные структуры данных
    - key: options.currently_missing_from_js.immutable_data_structures.description
      t: Новые глубоко неизменяемые структуры данных, такие как `Record` и `Tuple`.
    - key: options.currently_missing_from_js.better_date_management
      t: Продвинутое управление временем
    - key: options.currently_missing_from_js.better_date_management.description
      t: Новый объект `Temporal` для работы с датами и временем.
    - key: options.currently_missing_from_js.observable
      t: Observable
    - key: options.currently_missing_from_js.observable.description
      t: Новый тип `Observable`, используемый для моделирования источников данных.
    # - key: options.currently_missing_from_js.xxx
    #   t:
    # - key: options.currently_missing_from_js.xxx.description
    #   t:

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: Деструктуризация
    - key: features.destructuring.description
      t: 'Пример: `const { foo } = bar`'
    - key: features.spread_operator
      t: Оператор расширения
    - key: features.spread_operator.description
      t: 'Пример: `[...array1, ...array2]`'
    - key: features.arrow_functions
      t: Стрелочные функции
    - key: features.arrow_functions.description
      t: 'Пример: `const foo = () => {}`'
    - key: features.nullish_coalescing
      t: Оператор объединения с null
    - key: features.nullish_coalescing.description
      t: >
        Пример: `const foo = 0 ?? 42`
    - key: features.optional_chaining
      t: Опциональная цепочка
    - key: features.optional_chaining.description
      t: >
        Пример: `const dogName = adventurer.dog?.name`
    - key: features.private_fields
      t: Приватные поля
    - key: features.private_fields.description
      t: >
        Пример: `class ClassWithPrivateField { #privateField }`

    # language
    - key: features.proxies
      t: Прокси
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Промисы
    - key: features.decorators
      t: Декораторы
    - key: features.decorators.description
      t: >
          В упрощённом виде, декоратор — это просто способ обернуть
          один фрагмент кода другим, буквально “декорируя” его.
    - key: features.dynamic_import
      t: Динамический импорт
    - key: features.dynamic_import.description
      t: >
        Пример: <code>await import('/modules/my-module.js')</code>
    - key: features.promise_all_settled
      t: Promise.allSettled()
    - key: features.big_int
      t: BigInt
    - key: features.numeric_separators
      t: Разделители в числовых литералах
    - key: features.string_replace_all
      t: String.prototype.replaceAll()
    - key: features.string_match_all
      t: String.prototype.matchAll()
    - key: features.logical_assignment
      t: Логическое присваивание
    - key: features.promise_any
      t: Promise.any()
    - key: features.array_at
      t: Array.prototype.at()
    - key: features.top_level_await
      t: Top-Level Await
    - key: features.intl
      t: Intl
    - key: features.custom_elements
      t: Кастомные элементы
    - key: features.shadow_dom
      t: Shadow DOM
    - key: features.page_visibility
      t: Page Visibility API
    - key: features.broadcast_channel
      t: Broadcast Channel API
    - key: features.geolocation
      t: Geolocation API
    - key: features.file_system_access
      t: File System Access API
    - key: features.web_share
      t: Web Share API
    - key: features.webxr
      t: WebXR

    # data structures
    - key: features.maps
      t: Ассоциативные массивы (объекты Map)
    - key: features.sets
      t: Множества (объекты Set)
    - key: features.typed_arrays
      t: Типизированные массивы
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Сервис-воркеры
    - key: features.local_storage
      t: Локальное хранилище
    - key: features.i18n
      t: Интернационализация (i18n)
    - key: features.web_components
      t: Веб-компоненты
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: Прогрессивные веб-приложения (PWA)
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: Объектно‑ориентированное программирование
    - key: features.functional_programming
      t: Функциональное программирование
    - key: features.reactive_programming
      t: Реактивное программирование

    # upcoming features
    # - key: features.static_typing
    #   t: Статическая типизация

    # - key: features.standard_library
    #   t: Стандартная библиотека

    # - key: features.pattern_matching
    #   t: Сопоставление по образцу (Pattern Matching)

    # - key: features.pipe_operator
    #   t: Оператор конвейера

    # - key: features.immutable_data_structures
    #   t: Иммутабельные структуры данных

    ###########################################################################
    # Tools
    ###########################################################################

    - key: tools.angular.description
      t: >
        Обратите внимание, что этот вопрос относится к опыту работы с [Angular](https://angular.io/),
        а *не* с устаревшим [AngularJS](https://angularjs.org/).

    ###########################################################################
    # Other Tools
    ###########################################################################

    - key: tools_others.runtimes
      t: Среды выполнения JavaScript
    - key: tools_others.runtimes.description
      t: Какие движки/среды выполнения/рантаймы вы регулярно используете?
    - key: tools_others.runtimes.others
      t: Другие среды выполнения
    - key: tools_others.runtimes.others.description
      t: Другие ответы (поле со свободной формой ответа).

    - key: tools_others.package_registries
      t: Реестры пакетов
    - key: tools_others.package_registries.description
      t: Из каких реестров вы регулярно загружаете пакеты?
    - key: tools_others.package_registries.others
      t: Другие реестры пакетов
    - key: tools_others.package_registries.others.description
      t: Другие ответы (поле со свободной формой ответа).

    - key: tools_others.form_factors
      aliasFor: environments.form_factors
    - key: tools_others.form_factors.description
      aliasFor: environments.form_factors.description

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScript двигается в правильном направлении

    - key: opinions.building_js_apps_overly_complex
      t: Разрабатывать JavaScript-приложения сейчас слишком сложно

    - key: opinions.js_over_used_online
      t: JavaScript используется слишком часто

    - key: opinions.enjoy_building_js_apps
      t: Мне нравится писать приложения на JavaScript

    - key: opinions.would_like_js_to_be_main_lang
      t: Я бы хотел, чтобы JavaScript был моим основным языком программирования

    - key: opinions.js_ecosystem_changing_to_fast
      t: Экосистема JavaScript меняется слишком быстро

    - key: opinions_others.missing_from_js.others
      t: Что в данный момент вам не хватает в JavaScript?
    - key: opinions_others.missing_from_js.others.description
      t: Возможности, которые вы хотели бы видеть в JavaScript.

    - key: happiness.front_end_frameworks
      t: Насколько вы удовлетворены текущим состоянием фронтенд-фреймворков?
    - key: happiness.back_end_frameworks
      t: Насколько вы удовлетворены текущим состоянием бэкенд-фреймворков?
    - key: happiness.testing
      t: Насколько вы удовлетворены текущим состоянием инструментов для тестирования?
    - key: happiness.mobile_desktop
      t: Насколько вы удовлетворены текущим состоянием фреймворков для создания мобильных и десктопных приложений?
    - key: happiness.build_tools
      t: Насколько вы удовлетворены текущим состоянием инструментами сборки?
    - key: happiness.monorepo_tools
      t: Насколько вы удовлетворены текущим состоянием инструментами для монорепозиториев?

    - key: happiness.state_of_the_web
      t: Насколько вы удовлетворены текущим состоянием веб-технологий?

    - key: happiness.state_of_js
      t: Насколько вы удовлетворены текущим состоянием JavaScript?

    # Pain Points
    - key: opinions.js_pain_points
      t: Болевые точки JavaScript
    - key: opinions.js_pain_points.description
      t: Из каждой пары выберите проблему, с которой вы чаще всего сталкиваетесь.

    - key: opinions_others.js_pain_points.others
      t: Другие болевые точки JavaScript

    # Missing Features
    - key: opinions.currently_missing_from_js
      t: Что вам не хватает в JavaScript?
    - key: opinions.currently_missing_from_js.description
      t: Из каждой пары выберите то, что вы бы хотели больше всего видеть в JavaScript сегодня.
    - key: opinions_others.currently_missing_from_js.others
      t: Другие недостающие фичи

    # pain points/currently missing (results)
    - key: js_pain_points.js_pain_points_wins
      t: Болевые точки JavaScript
    - key: js_pain_points.js_pain_points_wins.description
      t: Наиболее часто возникающая проблема при работе с JavaScript? Результаты ранжируются по количеству выигранных раундов.

    - key: js_pain_points.js_pain_points_matchups
      t: Болевые точки JavaScript (Matchups)
    - key: js_pain_points.js_pain_points_matchups.description
      t: Наиболее часто возникающая проблема при работе с JavaScript? Процент раундов, где расположенная слева проблема чаще встречается по сравнению с верхней.

    - key: currently_missing_from_js.currently_missing_from_js_wins
      t: Отсутствующие фичи в JavaScript (Пары)
    - key: currently_missing_from_js.currently_missing_from_js_wins.description
      t: Какую из фичей в JavaScript вы хотели бы использовать уже сегодня? Результаты ранжируются по количеству выигранных раундов.

    - key: currently_missing_from_js.currently_missing_from_js_matchups
      t: Отсутствующие фичи в JavaScript (Пары)
    - key: currently_missing_from_js.currently_missing_from_js_matchups.description
      t: Какую из фичей в JavaScript вы хотели бы использовать уже сегодня? Процент раундов, где расположенная слева проблема чаще встречается по сравнению с верхней.

    ###########################################################################
    # Resources
    ###########################################################################

    - key: resources.first_steps_js
      t: Первые шаги в JavaScript
    - key: resources.first_steps_js.description
      t: Когда вы только начинали, как вы изучали JavaScript?
